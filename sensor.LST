C51 COMPILER V9.01   SENSOR                                                                10/27/2016 21:18:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE SENSOR
OBJECT MODULE PLACED IN .\sensor.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\sensor.c BROWSE DEBUG OBJECTEXTEND OBJECT(.\sensor.obj)

line level    source

   1          #include<reg51.h>
   2          #include"sensor.h"
   3          #include"timer.h"
   4          sbit sensor1=P0^1;
   5          sbit sensor2=P0^2;
   6          sbit sensor3=P0^3;
   7          sbit sensor4=P0^4;
   8          sbit sensor5=P0^5;
   9          sbit sensor6=P0^6;
  10          sbit sensor7=P0^7;
  11          sbit sensor8=P2^7;
  12          sbit sensor9=P2^6;
  13          sbit sensor10=P2^5;//test black line
  14          
  15          char state_edge()
  16          {
  17   1          if(sensor1==DARK && sensor2==BRIGHT)
  18   1              return STRAIGHT;
  19   1          else if(sensor1==DARK && sensor2==DARK)
  20   1              return DEVIATION_OF_LEFT;
  21   1          else if(sensor1==BRIGHT && sensor2==BRIGHT)
  22   1              return DEVIATION_OF_RIGHT;
  23   1          else
  24   1              return DEVIATION_OF_VERTICAL;
  25   1      }
  26          
  27          char should_swerve_left()
  28          {
  29   1          if(sensor3==DARK)
  30   1              return NOSWERVE;
  31   1          else
  32   1              return SWERVE_LEFT;
  33   1      }
  34          
  35          char should_swerve_right()
  36          {
  37   1          if(sensor4==DARK)
  38   1              return SWERVE_RIGHT;
  39   1          else
  40   1              return NOSWERVE;
  41   1      }
  42          #define NO_USING
  43          #ifndef NO_USING
              char should_swerve_block()
              {
                  if(sensor5==BRIGHT&&sensor7==BRIGHT&&sensor9==BRIGHT)
                      return SWERVE_BLOCK;
                  else if(sensor5==DARK&&sensor7==DARK)
                      return SWERVE_BLOCK_STOP;
                  else if(sensor5==BRIGHT&&sensor7==DARK)
                      return SWERVE_BLOCK_CONTINUE;
                  else
                      return NONE;
              }
              #endif // NO_USING
C51 COMPILER V9.01   SENSOR                                                                10/27/2016 21:18:27 PAGE 2   

  56          char right_sensor()
  57          {
  58   1          if(sensor7==BRIGHT)
  59   1              return HAVE_BLOCK;
  60   1          else
  61   1              return NONE;
  62   1      }
  63          char right_sensor2()
  64          {
  65   1          if(sensor9==BRIGHT)
  66   1              return HAVE_BLOCK;
  67   1          else
  68   1              return NONE;
  69   1      }
  70          
  71          char left_sensor()
  72          {
  73   1          /*
  74   1          if(sensor5==BRIGHT)
  75   1          {
  76   1              sleep(5);
  77   1              if(sensor5==BRIGHT)
  78   1                  return HAVE_BLOCK;
  79   1              else
  80   1                  return NONE;
  81   1          }
  82   1          else
  83   1              return NONE;*/
  84   1          char i,cnt=0,max=0;
  85   1          for(i=0;i<10;i++)
  86   1          {
  87   2              if(sensor5==BRIGHT)
  88   2                  cnt++;
  89   2              else
  90   2                  cnt=0;
  91   2              if(cnt>max)
  92   2                  max=cnt;
  93   2              sleep(1);
  94   2          }
  95   1          if(max<4)
  96   1              return NONE;
  97   1          else
  98   1              return HAVE_BLOCK;
  99   1      
 100   1      }
 101          
 102          char should_go_block()
 103          {
 104   1          if(sensor6==BRIGHT)
 105   1              return GO_BLOCK;
 106   1          else
 107   1              return SWERVE_BLOCK;
 108   1      }
 109          
 110          char have_block1()
 111          {
 112   1          if(sensor8==BRIGHT)
 113   1              return HAVE_BLOCK;
 114   1          else
 115   1              return NONE;
 116   1      }
 117          
C51 COMPILER V9.01   SENSOR                                                                10/27/2016 21:18:27 PAGE 3   

 118          #if 0
              char have_black_line()
              {
                  static unsigned char flag=0;
                  static clock_t time=0;
                  if(sensor10==1&&flag==0&&clock()-time>3)
                  {
                      flag=1;
                      time=clock();
                      return HAVE_LINE;
                  }
                  else if(sensor10==0)
                  {
                      flag=0;
                  }
                  return NONE;
              }
              #endif // 0
 136          static unsigned char BLACK_LINE_CNT=0;
 137          void initInter0()
 138          {
 139   1          IT0=1;  //interrupt
 140   1          PX0=1;
 141   1          EX0=1;
 142   1      }
 143          static void inter0() interrupt 0
 144          {
 145   1          static clock_t time=0;
 146   1          static clock_t before=0;
 147   1          static unsigned char flag=0;
 148   1          //static unsigned char cnt=0;
 149   1          clock_t now=clock();
 150   1          if(flag==0 && now-time >300)
 151   1          {
 152   2              //insert code
 153   2              //flag=1;
 154   2              BLACK_LINE_CNT++;
 155   2              //end
 156   2          }
 157   1          time=now;
 158   1          before=now;
 159   1      }
 160          unsigned char get_black_line_cnt()
 161          {
 162   1          return BLACK_LINE_CNT;
 163   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    295    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     10       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
